#include <SFML/Graphics.hpp>
#include <iostream>
#include <fstream>
#include <cstdlib>
#include <string>

// TAKES IN USER INPUT TO

// GETS THE LENGTH OF THE WORD AND PRINTS THE EMPTY OUTLINE OF THE WORD
//function declaration of type string, takes in string parameters
std::string hiddenWord(std::string& randomWord)
{
    int size = randomWord.length();
    std::string emptyString;

    for (int iteration = 0; iteration < size; iteration++)
    {
        emptyString += "_ ";
    }
    return emptyString;
}

// CHOOSES A RANDOM WORD FROM THE TXT FILE
//function of type string
std::string randomWord()
{
    //string declaration, hangmanWord
    std::string hangmanWord;

    //opens the dictionary of words from the txt file
    std::ifstream wordDictionary ("C:/common-7-letter-words.txt");

    // creates a random number from the number words in the txt file (5757)
    srand((unsigned) time(NULL));
    int randomNumLine = rand() % 1371;

    //condition when the dictionary is open
    if (wordDictionary.is_open())
    {
        //iterates through the txt file until it gets to the word
        for (int iteration = 1; iteration < randomNumLine; ++iteration)
        {
            //reads the word and sends it hangmanWord
            std::getline(wordDictionary,hangmanWord);
        }
    }

    //returns it to the main function
    return hangmanWord;
}

int main()
{
    // renders the size and title of the window
    sf::RenderWindow window(sf::VideoMode(1920, 1080), "Hangman!");

    //sf::CircleShape shape(200.f);
    //shape.setFillColor(sf::Color::Blue);

    // declares a font named "font"
    sf::Font font;

    // load the text font from file path, font from dafont.com
    font.loadFromFile("C:/Catfiles.ttf");

    // declares Word to be the randomly selected word from the randomWord() function
    std::string Word = randomWord();
    std::string wordOutline = hiddenWord(Word);


    // font settings, size, color, etc.
    sf::Text text;
    text.setFont(font);

    // sets the text to the randomly chosen word (OUTLINE only)
    text.setString("gustavo");

    text.setString(wordOutline);
    //sets the size and color of the word
    text.setCharacterSize(90);
    text.setFillColor(sf::Color::White);

    //letterGuess(Word,wordOutline,userLetterGuess);

    // the window for the display
    while (window.isOpen())
    {
        sf::Event event;
        while (window.pollEvent(event))
        {
            if (event.type == sf::Event::Closed)
                window.close();
        }

        window.clear();

        //window.draw(shape);
        window.draw(text);
        //window.draw(text);


        window.display();
    }

    return 0;
}
